# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        jdk: [8]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}
      AUDIODEV: "null"

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.jdk }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.jdk }}-
            maven-${{ matrix.os }}-

     - name: Set JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           ${{ matrix.jdk }}
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-1.8
         server-id: ossrh
         server-username: MAVEN_USERNAME
         server-password: MAVEN_PASSWORD

     - name: Import GPG key
       uses: crazy-max/ghaction-import-gpg@v5.2.0
       with:
         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
         passphrase: ${{ secrets.GPG_PASSPHRASE }}

     - name: Run deploy
       uses: coactions/setup-xvfb@v1
       if: ${{ contains(matrix.os, 'windows-latest') }}
       with:
         run: mvn clean deploy --file lionengine-parent/pom.xml -U -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Prelease
       env:
         MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
         MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  
  sonar:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [17]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}
      AUDIODEV: "null"

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.jdk }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.jdk }}-
            maven-${{ matrix.os }}-

     - name: Set JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           ${{ matrix.jdk }}
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-17

     - name: Run sonar
       uses: coactions/setup-xvfb@v1
       if: ${{ contains(matrix.os, 'ubuntu-latest') }}
       with:
         run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file lionengine-parent/pom.xml -U -Dsonar.organization=b3dgs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=5524bf449ca45fcdb334698371466398321f3a82
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

