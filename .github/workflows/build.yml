# This workflow will:
# - compile and sign project on windows with JDK 8
# - run sonar on linux
# - deploy snapshot on maven

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        jdk: [8]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}
      AUDIODEV: "null"

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0
       with:
        fetch-depth: 0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.jdk }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.jdk }}-
            maven-${{ matrix.os }}-

     - name: JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           ${{ matrix.jdk }}
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-1.8
         server-id: ossrh
         server-username: MAVEN_USERNAME
         server-password: MAVEN_PASSWORD

     - name: maven-settings-xml-action
       shell: bash
       run: echo ^<settings^> > ~/.m2/settings.xml
            | echo ^<servers^> >> ~/.m2/settings.xml
            | echo ^<server^> >> ~/.m2/settings.xml
            | echo ^<id^>ossrh^</id^> >> ~/.m2/settings.xml
            | echo ^<username^>${{ secrets.MAVEN_USERNAME }}^</username^> >> ~/.m2/settings.xml
            | echo ^<password^>${{ secrets.MAVEN_PASSWORD }}^</password^> >> ~/.m2/settings.xml
            | echo ^</server^> >> ~/.m2/settings.xml
            | echo ^</servers^> >> ~/.m2/settings.xml
            | echo ^<mirrors^> >> ~/.m2/settings.xml
            | echo ^<mirror^> >> ~/.m2/settings.xml
            | echo ^<id^>maven-default-http-blocker^</id^> >> ~/.m2/settings.xml
            | echo ^<mirrorOf^>external:dont-match-anything-mate:*^</mirrorOf^> >> ~/.m2/settings.xml
            | echo ^<name^>Pseudo repo.^</name^> >> ~/.m2/settings.xml
            | echo ^<url^>http://0.0.0.0/^</url^> >> ~/.m2/settings.xml
            | echo ^<blocked^>false^</blocked^> >> ~/.m2/settings.xml
            | echo ^</mirror^> >> ~/.m2/settings.xml
            | echo ^</mirrors^> >> ~/.m2/settings.xml
            | echo ^</settings^> >> ~/.m2/settings.xml

     - name: GPG
       uses: crazy-max/ghaction-import-gpg@v5.2.0
       with:
         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
         passphrase: ${{ secrets.GPG_PASSPHRASE }}

     - name: Deploy
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean deploy --file lionengine-parent/pom.xml -U -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -Prelease
       env:
         MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
         MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

  sonar:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        jdk: [17]
    runs-on: ${{ matrix.os }}
    env:
      JDK_VERSION: ${{ matrix.jdk }}
      AUDIODEV: "null"

    steps:
     - name: Checkout
       uses: actions/checkout@v3.5.0
       with:
        fetch-depth: 0

     - name: Cache
       uses: actions/cache@v3.3.1
       with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-java${{ matrix.jdk }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-java${{ matrix.jdk }}-
            maven-${{ matrix.os }}-

     - name: JDK
       uses: actions/setup-java@v3.11.0
       with:
         java-version: |
           ${{ matrix.jdk }}
         distribution: 'temurin'
         mvn-toolchain-id: |
           JavaSE-17

     - name: maven-settings-xml-action
       run: cat ~/.m2/settings.xml | echo "<settings><mirrors><mirror><id>maven-default-http-blocker</id><mirrorOf>external:dont-match-anything-mate:*</mirrorOf><name>Pseudo repo.</name><url>http://0.0.0.0/</url><blocked>false</blocked></mirror></mirrors></settings>" > ~/.m2/settings.xml

     - name: Sonar
       uses: coactions/setup-xvfb@v1
       with:
         run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file lionengine-parent/pom.xml -U -Dsonar.organization=b3dgs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=b3dgs_lionengine
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
